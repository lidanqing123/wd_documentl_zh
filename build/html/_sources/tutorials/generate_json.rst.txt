
(howto)生成一个描述输入的JSON文件
==================================

为WDL脚本中的命令指定输入变量(如文件名和参数)的最简单方法是对它们进行硬编码，即将它们写入脚本本身。但是，这样做会迫使您在每次希望对新一批数据运行脚本时都要创建一个新的副本并编辑输入—这首先就破坏了设置管道脚本的优点。

一种更好的处理方法是为输入变量指定所有的值，您希望能够在JSON文件(一种结构化的文本格式，有点像XML，但是更好——当然可读性更好)中自定义这些值。然后，您需要做的就是为希望通过管道运行的每批新数据创建一个新的输入文件。执行引擎将使用该JSON文件在适当的地方填充脚本中命令的输入值。

尽管如此，从表面上看，您可能会认为将输入的JSON文件放在一起(具体地说，正确地组织它，不要忘记任何命令的输入)将是一项冗长和/或艰巨的任务，特别是在一个只有命令行的世界中，没有指向和单击GUI。

但是不要害怕!援助就在眼前。WDL附带一个实用函数(在wdltool包中)，它将解析WDL脚本并自动生成一个包含适当输入文件和参数定义的模板JSON文件。然后，您所需要做的就是使用要在给定管道运行中使用的实际值填充文件的副本。当您准备在选择的执行引擎上运行脚本时，只需提供输入文件和脚本。

生成JSON模板
-------------

要为你的WDL脚本生成输入模板，只需调用wdltool inputs 函数:

  :: 

    java -jar wdltool.jar inputs myWorkflow.wdl > myWorkflow_inputs.json

这将创建一个名为myWorkflow_inputs.json的文件，该文件按照如下模式列出脚本中所有任务的所有输入:

  :: 

	{
	    "<workflow name>.<task name>.<variable name>": "<variable type>"
	}

这将使您不必手动编译所有任务及其变量的列表!相当漂亮的,对吗?

.. note:: 
    如果您省略了命令的> myWorkflow_inputs.json部分，模板内容将输出到终端，而不是写入文件。

为特定的运行定制输入文件
-------------------------

每当您希望对一些新数据或不同的参数运行脚本时，您只需在文本编辑器中打开这个文件(或更好的是一个副本)，并将冒号右侧的部分替换为您想要的值。

如果您想知道，原始模板中的“<variable type>”位只是用来提醒您任务希望看到的变量类型。本着同样的精神，我们建议您在输入文件中填写文件名和参数值时，给您的任务和变量起一个有意义的名字。否则，您将发现自己不得不经常引用管道脚本本身，因为不可能在JSON文件中添加注释。

Example
^^^^^^^

假设myWorkflow.wdl脚本描述了一个名为myWorkflowName的工作流。这个工作流包括一个名为stepA的任务，它接受两个输入，一个名为input_file的文件和一个名为sample_name的字符串。以上命令生成的输入模板如下:

  :: 

	{
	    "myWorkflowName.stepA.input_file": "File"
	    "myWorkflowName.stepA.sample_name": "String"
	}

因此，要在名为input的文件上运行这个脚本。如果感兴趣的样本名称是NA12878，您可以将其更改为:

  :: 

	{
	    "myWorkflowName.stepA.input_file": "~/path/to/input.bam"
	    "myWorkflowName.stepA.sample_name": "NA12878"
	}


